#define HOLD_VALUE -958
#define REL_VALUE -6
#define GRAB_VALUE -359
#define SLIDE_VALUE -1350
#define BALL_THRES 20

#include "constant.h"

task disp() {
	long rc;
	for(;;) {
		rc=MotorRotationCount(OUT_C);
		ClearLine(LCD_LINE1);
		NumOut(0,LCD_LINE1,rc);
		Wait(100);
	}
}

task manual_ctrl(){
	 for(;;) {
		if(ButtonPressed(BTNRIGHT, false))
			OnFwd(OUT_C, 20);
		else if(ButtonPressed(BTNLEFT, false))
			OnRev(OUT_C, 20);
		else
			Off(OUT_C);
	}
}

void catch_ball() {
	long rc;
	rc=MotorRotationCount(OUT_C);
	
	while(rc >= GRAB_VALUE) {

		OnRev(OUT_C,20);
		rc=MotorRotationCount(OUT_C);
	}
	

	Off(OUT_C);
	Wait(500);
	PlayTone(400, 500);
}


void hold() {
	long rc;
	rc=MotorRotationCount(OUT_C);
	
	while(rc >= HOLD_VALUE) {

		OnRev(OUT_C,20);
		rc=MotorRotationCount(OUT_C);
	}
	

	Off(OUT_C);
	Wait(500);
	PlayTone(400, 500);
}

void release_arm() {
	long rc;
	rc=MotorRotationCount(OUT_C);
	
	while(rc <= REL_VALUE) {

		OnFwd(OUT_C,20);
		rc=MotorRotationCount(OUT_C);
	}
	

	Off(OUT_C);
	Wait(500);
	PlayTone(400, 500);
}

void slide() {
	long rc;
	rc=MotorRotationCount(OUT_C);
	
	while(rc >= SLIDE_VALUE) {

		OnRev(OUT_C,20);
		rc=MotorRotationCount(OUT_C);
	}
	

	Off(OUT_C);
	Wait(500);
	PlayTone(500, 500);
}





task main() {

	ResetRotationCount(OUT_C);
	SetSensorLight(IN_4);
	int s1,s2;
	start disp;
	start manual_ctrl;
	hold();
	Wait(1000);
	release_arm();
	
	catch_ball();
	Wait(200);
	s1=light;
	hold();
	s2=light;
	if(abs(s2-s1)>BALL_THRES){
		//TODO MOVE TO NET
		slide();
	}else{
		//TODO KEEP LOOKING
	}

	

}


