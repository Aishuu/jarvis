#ifndef ARM_NXC
#define ARM_NXC

#define REL_VALUE           0
#define GRAB_VALUE          ( -604 )
#define HOLD_VALUE          ( -1082 )
#define HORIZONTAL_VALUE    ( -1245 )
#define SLIDE_VALUE         ( -1455 )
#define BLOCK_VALUE         ( -1600 )

#define RATIO_COGS          8
#define THRES_ARM           5

#include "constant.h"

long rc_rel;
bool found_arm;

void init_arm() {
    rc_rel = MotorRotationCount(OUT_C)-HORIZONTAL_VALUE;
    current_pos.angle_arm = (GRAB_VALUE-HORIZONTAL_VALUE)/RATIO_COGS;
}

void lower_arm_to(long rc_end, int power) {
    long rc;
    do {
        rc = MotorRotationCount(OUT_C)-rc_rel;
        OnFwd(OUT_C, power);       
        Wait(100);
    } while(rc < rc_end);
    Off(OUT_C);
    if(rc > GRAB_VALUE)
        current_pos.angle_arm = 0;
    else
        current_pos.angle_arm = (GRAB_VALUE-rc)/RATIO_COGS;
}

void raise_arm_to(long rc_end, int power) {
    long rc;
    do {
        rc = MotorRotationCount(OUT_C)-rc_rel;
        OnRev(OUT_C, power);       
        Wait(100);
    } while(rc > rc_end);
    Off(OUT_C);
    if(rc > GRAB_VALUE)
        current_pos.angle_arm = 0;
    else
        current_pos.angle_arm = (GRAB_VALUE-rc)/RATIO_COGS;
}

void move_arm_to(long rc_end, int power=50) {
    long rc = MotorRotationCount(OUT_C)-rc_rel;
    if(rc < rc_end)
        lower_arm_to(rc_end, power);
    else
        raise_arm_to(rc_end, power);
}

void catch_ball() {
    move_arm_to(GRAB_VALUE);
}

void hold() {
    move_arm_to(HOLD_VALUE);
}

void release_arm() {
    move_arm_to(REL_VALUE);
}

void slide() {
    move_arm_to(SLIDE_VALUE);
}

void horiz() {
    move_arm_to(HORIZONTAL_VALUE, 20);
}

task monitor_arm() {
    long rc1, rc2;
    rc1 = MotorRotationCount(OUT_C);
    do {
        rc2 = rc1;
        Wait(200);
        rc1 = MotorRotationCount(OUT_C);
    } while(rc2 - rc1 > THRES_ARM);
    found_arm = true;
}

void calibrate_arm() {
    OnRev(OUT_C, 20);
    found_arm = false;
    start monitor_arm;
    until(found_arm)
        Wait(100);
    rc_rel = MotorRotationCount(OUT_C)-BLOCK_VALUE;
    current_pos.angle_arm = (GRAB_VALUE-BLOCK_VALUE)/RATIO_COGS;
    hold();
}

#endif          // arm.nxc
